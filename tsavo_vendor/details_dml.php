<?php

// Data functions (insert, update, delete, form) for table details

// This script and data application were generated by AppGini 5.96
// Download AppGini for free from https://bigprof.com/appgini/download/

function details_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('details');
	if(!$arrPerm['insert']) return false;

	$data = [
		'supp_conf' => Request::val('supp_conf', 'Not Seen'),
		'supp_name' => Request::lookup('product_id'),
		'details' => Request::val('details', 'Not Dispatched'),
		'payy_id' => Request::lookup('sales_id'),
		'size' => Request::lookup('product_id'),
		'sales_date' => parseMySQLDate('', '1'),
		'conf_id' => Request::val('conf_id', ''),
		'from_branch_id' => Request::val('from_branch_id', '1'),
		'to_branch_id' => Request::val('to_branch_id', '0'),
		'type' => Request::val('type', '2'),
		'status' => Request::val('status', '0'),
	];


	// hook: details_before_insert
	if(function_exists('details_before_insert')) {
		$args = [];
		if(!details_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('details', backtick_keys_once($data), $error);
	if($error)
		die("{$error}<br><a href=\"#\" onclick=\"history.go(-1);\">{$Translation['< back']}</a>");

	$recID = db_insert_id(db_link());

	// automatic sales_id if passed as filterer
	if($_REQUEST['filterer_sales_id']) {
		sql("UPDATE `details` SET `sales_id`='" . makeSafe($_REQUEST['filterer_sales_id']) . "' WHERE `id`='" . makeSafe($recID, false) . "'", $eo);
	}

	// automatic product_id if passed as filterer
	if($_REQUEST['filterer_product_id']) {
		sql("UPDATE `details` SET `product_id`='" . makeSafe($_REQUEST['filterer_product_id']) . "' WHERE `id`='" . makeSafe($recID, false) . "'", $eo);
	}

	update_calc_fields('details', $recID, calculated_fields()['details']);

	// hook: details_after_insert
	if(function_exists('details_after_insert')) {
		$res = sql("SELECT * FROM `details` WHERE `id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=[];
		if(!details_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('details', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(!empty($_REQUEST['SelectedID'])) details_copy_children($recID, $_REQUEST['SelectedID']);

	return $recID;
}

function details_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function details_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('details', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: details_before_delete
	if(function_exists('details_before_delete')) {
		$args = [];
		if(!details_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	// child table: sales_monitor
	$res = sql("SELECT `id` FROM `details` WHERE `id`='{$selected_id}'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `sales_monitor` WHERE `product_id`='" . makeSafe($id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'sales_monitor', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'sales_monitor', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'details_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'details_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	sql("DELETE FROM `details` WHERE `id`='{$selected_id}'", $eo);

	// hook: details_after_delete
	if(function_exists('details_after_delete')) {
		$args = [];
		details_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='details' AND `pkValue`='{$selected_id}'", $eo);
}

function details_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('details', $selected_id, 'edit')) return false;

	$data = [
		'supp_conf' => Request::val('supp_conf', ''),
		'supp_name' => Request::lookup('product_id'),
		'details' => Request::val('details', ''),
		'payy_id' => Request::lookup('sales_id'),
		'reference_number' => parseCode('REF<%%editingTimestamp%%>', false),
		'size' => Request::lookup('product_id'),
		'last_edit' => parseCode('<%%editingDate%%>/<%%editingDateTime%%>', false),
		'editor' => parseCode('<%%editorUsername%%>', false),
		'conf_id' => Request::val('conf_id', ''),
		'from_branch_id' => Request::val('from_branch_id', ''),
		'to_branch_id' => Request::val('to_branch_id', ''),
		'type' => Request::val('type', ''),
		'status' => Request::val('status', ''),
	];

	// get existing values
	$old_data = getRecord('details', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: details_before_update
	if(function_exists('details_before_update')) {
		$args = ['old_data' => $old_data];
		if(!details_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'details', 
		backtick_keys_once($set), 
		['`id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="details_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('details', $data['selectedID'], calculated_fields()['details']);

	// hook: details_after_update
	if(function_exists('details_after_update')) {
		$res = sql("SELECT * FROM `details` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['id'];
		$args = ['old_data' => $old_data];
		if(!details_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='details' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function details_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm = getTablePermissions('details');
	if(!$arrPerm['insert'] && $selected_id=='') return $Translation['tableAccessDenied'];
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != '') {
		$dvprint = true;
	}

	$filterer_sales_id = thisOr($_REQUEST['filterer_sales_id'], '');
	$filterer_product_id = thisOr($_REQUEST['filterer_product_id'], '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: supp_conf
	$combo_supp_conf = new Combo;
	$combo_supp_conf->ListType = 2;
	$combo_supp_conf->MultipleSeparator = ', ';
	$combo_supp_conf->ListBoxHeight = 10;
	$combo_supp_conf->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/details.supp_conf.csv')) {
		$supp_conf_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/details.supp_conf.csv')));
		$combo_supp_conf->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($supp_conf_data)));
		$combo_supp_conf->ListData = $combo_supp_conf->ListItem;
	} else {
		$combo_supp_conf->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Not Seen;;Seen;;Sent to vendor")));
		$combo_supp_conf->ListData = $combo_supp_conf->ListItem;
	}
	$combo_supp_conf->SelectName = 'supp_conf';
	// combobox: details
	$combo_details = new Combo;
	$combo_details->ListType = 0;
	$combo_details->MultipleSeparator = ', ';
	$combo_details->ListBoxHeight = 10;
	$combo_details->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/details.details.csv')) {
		$details_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/details.details.csv')));
		$combo_details->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($details_data)));
		$combo_details->ListData = $combo_details->ListItem;
	} else {
		$combo_details->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Not Dispatched;;Item Dispatched;;Ready for pickup;;Delivered")));
		$combo_details->ListData = $combo_details->ListItem;
	}
	$combo_details->SelectName = 'details';
	// combobox: sales_id
	$combo_sales_id = new DataCombo;
	// combobox: product_id
	$combo_product_id = new DataCombo;
	// combobox: sales_date
	$combo_sales_date = new DateCombo;
	$combo_sales_date->DateFormat = "mdy";
	$combo_sales_date->MinYear = 1900;
	$combo_sales_date->MaxYear = 2100;
	$combo_sales_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_sales_date->MonthNames = $Translation['month names'];
	$combo_sales_date->NamePrefix = 'sales_date';

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return $Translation['tableAccessDenied'];

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='details' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='details' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return $Translation['tableAccessDenied'];
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `details` WHERE `id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'details_view.php', false);
		}
		$combo_supp_conf->SelectedData = $row['supp_conf'];
		$combo_details->SelectedData = $row['details'];
		$combo_sales_id->SelectedData = $row['sales_id'];
		$combo_product_id->SelectedData = $row['product_id'];
		$combo_sales_date->DefaultDate = $row['sales_date'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$combo_supp_conf->SelectedText = ( $_REQUEST['FilterField'][1] == '2' && $_REQUEST['FilterOperator'][1] == '<=>' ? $_REQUEST['FilterValue'][1] : 'Not Seen');
		$combo_details->SelectedText = ( $_REQUEST['FilterField'][1] == '4' && $_REQUEST['FilterOperator'][1] == '<=>' ? $_REQUEST['FilterValue'][1] : 'Not Dispatched');
		$combo_sales_id->SelectedData = $filterer_sales_id;
		$combo_product_id->SelectedData = $filterer_product_id;
	}
	$combo_supp_conf->Render();
	$combo_details->Render();
	$combo_sales_id->HTML = '<span id="sales_id-container' . $rnd1 . '"></span><input type="hidden" name="sales_id" id="sales_id' . $rnd1 . '" value="' . html_attr($combo_sales_id->SelectedData) . '">';
	$combo_sales_id->MatchText = '<span id="sales_id-container-readonly' . $rnd1 . '"></span><input type="hidden" name="sales_id" id="sales_id' . $rnd1 . '" value="' . html_attr($combo_sales_id->SelectedData) . '">';
	$combo_product_id->HTML = '<span id="product_id-container' . $rnd1 . '"></span><input type="hidden" name="product_id" id="product_id' . $rnd1 . '" value="' . html_attr($combo_product_id->SelectedData) . '">';
	$combo_product_id->MatchText = '<span id="product_id-container-readonly' . $rnd1 . '"></span><input type="hidden" name="product_id" id="product_id' . $rnd1 . '" value="' . html_attr($combo_product_id->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_sales_id__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['sales_id'] : htmlspecialchars($filterer_sales_id, ENT_QUOTES)); ?>"};
		AppGini.current_product_id__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['product_id'] : htmlspecialchars($filterer_product_id, ENT_QUOTES)); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(sales_id_reload__RAND__) == 'function') sales_id_reload__RAND__();
				if(typeof(product_id_reload__RAND__) == 'function') product_id_reload__RAND__();
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function sales_id_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#sales_id-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_sales_id__RAND__.value, t: 'details', f: 'sales_id' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="sales_id"]').val(resp.results[0].id);
							$j('[id=sales_id-container-readonly__RAND__]').html('<span id="sales_id-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=sales_view_parent]').hide(); } else { $j('.btn[id=sales_view_parent]').show(); }


							if(typeof(sales_id_update_autofills__RAND__) == 'function') sales_id_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'details', f: 'sales_id' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_sales_id__RAND__.value = e.added.id;
				AppGini.current_sales_id__RAND__.text = e.added.text;
				$j('[name="sales_id"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=sales_view_parent]').hide(); } else { $j('.btn[id=sales_view_parent]').show(); }


				if(typeof(sales_id_update_autofills__RAND__) == 'function') sales_id_update_autofills__RAND__();
			});

			if(!$j("#sales_id-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_sales_id__RAND__.value, t: 'details', f: 'sales_id' },
					success: function(resp) {
						$j('[name="sales_id"]').val(resp.results[0].id);
						$j('[id=sales_id-container-readonly__RAND__]').html('<span id="sales_id-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=sales_view_parent]').hide(); } else { $j('.btn[id=sales_view_parent]').show(); }

						if(typeof(sales_id_update_autofills__RAND__) == 'function') sales_id_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_sales_id__RAND__.value, t: 'details', f: 'sales_id' },
				success: function(resp) {
					$j('[id=sales_id-container__RAND__], [id=sales_id-container-readonly__RAND__]').html('<span id="sales_id-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=sales_view_parent]').hide(); } else { $j('.btn[id=sales_view_parent]').show(); }

					if(typeof(sales_id_update_autofills__RAND__) == 'function') sales_id_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function product_id_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#product_id-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_product_id__RAND__.value, t: 'details', f: 'product_id' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="product_id"]').val(resp.results[0].id);
							$j('[id=product_id-container-readonly__RAND__]').html('<span id="product_id-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=products_view_parent]').hide(); } else { $j('.btn[id=products_view_parent]').show(); }


							if(typeof(product_id_update_autofills__RAND__) == 'function') product_id_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'details', f: 'product_id' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_product_id__RAND__.value = e.added.id;
				AppGini.current_product_id__RAND__.text = e.added.text;
				$j('[name="product_id"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=products_view_parent]').hide(); } else { $j('.btn[id=products_view_parent]').show(); }


				if(typeof(product_id_update_autofills__RAND__) == 'function') product_id_update_autofills__RAND__();
			});

			if(!$j("#product_id-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_product_id__RAND__.value, t: 'details', f: 'product_id' },
					success: function(resp) {
						$j('[name="product_id"]').val(resp.results[0].id);
						$j('[id=product_id-container-readonly__RAND__]').html('<span id="product_id-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=products_view_parent]').hide(); } else { $j('.btn[id=products_view_parent]').show(); }

						if(typeof(product_id_update_autofills__RAND__) == 'function') product_id_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_product_id__RAND__.value, t: 'details', f: 'product_id' },
				success: function(resp) {
					$j('[id=product_id-container__RAND__], [id=product_id-container-readonly__RAND__]').html('<span id="product_id-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=products_view_parent]').hide(); } else { $j('.btn[id=products_view_parent]').show(); }

					if(typeof(product_id_update_autofills__RAND__) == 'function') product_id_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/details_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/details_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Detail details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert) {
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return details_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return details_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return details_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('input[name=supp_conf]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=supp_conf]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#details').replaceWith('<div class=\"form-control-static\" id=\"details\">' + (jQuery('#details').val() || '') + '</div>'); jQuery('#details-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif($AllowInsert) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(supp_conf)%%>', $combo_supp_conf->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(supp_conf)%%>', $combo_supp_conf->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(details)%%>', $combo_details->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(details)%%>', $combo_details->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(sales_id)%%>', $combo_sales_id->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(sales_id)%%>', $combo_sales_id->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(sales_id)%%>', urlencode($combo_sales_id->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(product_id)%%>', $combo_product_id->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(product_id)%%>', $combo_product_id->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(product_id)%%>', urlencode($combo_product_id->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(sales_date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_sales_date->GetHTML(true) . '</div>' : $combo_sales_date->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(sales_date)%%>', $combo_sales_date->GetHTML(true), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array('sales_id' => array('sales', 'Sales id'), 'product_id' => array('products', 'Product id'), );
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !$_REQUEST['Embedded']*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(supp_conf)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(details)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(sales_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(reference_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(product_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(product_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(quantity)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(sales_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(user_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(recipient_fname)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(recipient_lname)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(recipient_contact)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(recipient_email)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(recipient_address)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(weight)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(length)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(width)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(height)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(price)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(pus)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(last_edit)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(editor)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(conf_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(from_branch_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(to_branch_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(type)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(status)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(total_sales)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		$templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(supp_conf)%%>', safe_html($urow['supp_conf']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(supp_conf)%%>', html_attr($row['supp_conf']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(supp_conf)%%>', urlencode($urow['supp_conf']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(details)%%>', safe_html($urow['details']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(details)%%>', html_attr($row['details']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(details)%%>', urlencode($urow['details']), $templateCode);
		$templateCode = str_replace('<%%VALUE(sales_id)%%>', safe_html($urow['sales_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(sales_id)%%>', urlencode($urow['sales_id']), $templateCode);
		$templateCode = str_replace('<%%VALUE(reference_number)%%>', safe_html($urow['reference_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reference_number)%%>', urlencode($urow['reference_number']), $templateCode);
		$templateCode = str_replace('<%%VALUE(product_id)%%>', safe_html($urow['product_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(product_id)%%>', urlencode($urow['product_id']), $templateCode);
		$templateCode = str_replace('<%%VALUE(product_name)%%>', safe_html($urow['product_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(product_name)%%>', urlencode($urow['product_name']), $templateCode);
		$templateCode = str_replace('<%%VALUE(quantity)%%>', safe_html($urow['quantity']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(quantity)%%>', urlencode($urow['quantity']), $templateCode);
		$templateCode = str_replace('<%%VALUE(sales_date)%%>', @date('m/d/Y', @strtotime(html_attr($row['sales_date']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(sales_date)%%>', urlencode(@date('m/d/Y', @strtotime(html_attr($urow['sales_date'])))), $templateCode);
		$templateCode = str_replace('<%%VALUE(user_id)%%>', safe_html($urow['user_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(user_id)%%>', urlencode($urow['user_id']), $templateCode);
		$templateCode = str_replace('<%%VALUE(recipient_fname)%%>', safe_html($urow['recipient_fname']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(recipient_fname)%%>', urlencode($urow['recipient_fname']), $templateCode);
		$templateCode = str_replace('<%%VALUE(recipient_lname)%%>', safe_html($urow['recipient_lname']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(recipient_lname)%%>', urlencode($urow['recipient_lname']), $templateCode);
		$templateCode = str_replace('<%%VALUE(recipient_contact)%%>', safe_html($urow['recipient_contact']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(recipient_contact)%%>', urlencode($urow['recipient_contact']), $templateCode);
		$templateCode = str_replace('<%%VALUE(recipient_email)%%>', safe_html($urow['recipient_email']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(recipient_email)%%>', urlencode($urow['recipient_email']), $templateCode);
		$templateCode = str_replace('<%%VALUE(recipient_address)%%>', safe_html($urow['recipient_address']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(recipient_address)%%>', urlencode($urow['recipient_address']), $templateCode);
		$templateCode = str_replace('<%%VALUE(weight)%%>', safe_html($urow['weight']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(weight)%%>', urlencode($urow['weight']), $templateCode);
		$templateCode = str_replace('<%%VALUE(length)%%>', safe_html($urow['length']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(length)%%>', urlencode($urow['length']), $templateCode);
		$templateCode = str_replace('<%%VALUE(width)%%>', safe_html($urow['width']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(width)%%>', urlencode($urow['width']), $templateCode);
		$templateCode = str_replace('<%%VALUE(height)%%>', safe_html($urow['height']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(height)%%>', urlencode($urow['height']), $templateCode);
		$templateCode = str_replace('<%%VALUE(price)%%>', safe_html($urow['price']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(price)%%>', urlencode($urow['price']), $templateCode);
		$templateCode = str_replace('<%%VALUE(pus)%%>', safe_html($urow['pus']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(pus)%%>', urlencode($urow['pus']), $templateCode);
		$templateCode = str_replace('<%%VALUE(last_edit)%%>', safe_html($urow['last_edit']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(last_edit)%%>', urlencode($urow['last_edit']), $templateCode);
		$templateCode = str_replace('<%%VALUE(editor)%%>', safe_html($urow['editor']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(editor)%%>', urlencode($urow['editor']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(conf_id)%%>', safe_html($urow['conf_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(conf_id)%%>', html_attr($row['conf_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(conf_id)%%>', urlencode($urow['conf_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(from_branch_id)%%>', safe_html($urow['from_branch_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(from_branch_id)%%>', html_attr($row['from_branch_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(from_branch_id)%%>', urlencode($urow['from_branch_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(to_branch_id)%%>', safe_html($urow['to_branch_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(to_branch_id)%%>', html_attr($row['to_branch_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(to_branch_id)%%>', urlencode($urow['to_branch_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(type)%%>', safe_html($urow['type']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(type)%%>', html_attr($row['type']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(type)%%>', urlencode($urow['type']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(status)%%>', safe_html($urow['status']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(status)%%>', html_attr($row['status']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(status)%%>', urlencode($urow['status']), $templateCode);
		$templateCode = str_replace('<%%VALUE(total_sales)%%>', safe_html($urow['total_sales']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(total_sales)%%>', urlencode($urow['total_sales']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(supp_conf)%%>', 'Not Seen', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(supp_conf)%%>', urlencode('Not Seen'), $templateCode);
		$templateCode = str_replace('<%%VALUE(details)%%>', 'Not Dispatched', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(details)%%>', urlencode('Not Dispatched'), $templateCode);
		$templateCode = str_replace('<%%VALUE(sales_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(sales_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(reference_number)%%>', 'REF<%%editingTimestamp%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reference_number)%%>', urlencode('REF<%%editingTimestamp%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(product_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(product_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(product_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(product_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(quantity)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(quantity)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(sales_date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(sales_date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(user_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(user_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(recipient_fname)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(recipient_fname)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(recipient_lname)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(recipient_lname)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(recipient_contact)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(recipient_contact)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(recipient_email)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(recipient_email)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(recipient_address)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(recipient_address)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(weight)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(weight)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(length)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(length)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(width)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(width)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(height)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(height)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(price)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(price)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(pus)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(pus)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(last_edit)%%>', '<%%editingDate%%>/<%%editingDateTime%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(last_edit)%%>', urlencode('<%%editingDate%%>/<%%editingDateTime%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(editor)%%>', '<%%editorUsername%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(editor)%%>', urlencode('<%%editorUsername%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(conf_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(conf_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(from_branch_id)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(from_branch_id)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(to_branch_id)%%>', '0', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(to_branch_id)%%>', urlencode('0'), $templateCode);
		$templateCode = str_replace('<%%VALUE(type)%%>', '2', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(type)%%>', urlencode('2'), $templateCode);
		$templateCode = str_replace('<%%VALUE(status)%%>', '0', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(status)%%>', urlencode('0'), $templateCode);
		$templateCode = str_replace('<%%VALUE(total_sales)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(total_sales)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\tsales_id_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'details_autofill.php?rnd1=$rnd1&mfk=sales_id&id=' + encodeURIComponent('".addslashes($row['sales_id'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'details_autofill.php?rnd1=$rnd1&mfk=sales_id&id=' + encodeURIComponent(AppGini.current_sales_id{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#sales_id$rnd1').prop('disabled', true); \$j('#sales_idLoading').html('<img src=loading.gif align=top>'); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm[1] || (($arrPerm[3] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm[3] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm[3] == 3)) ? "\$j('#sales_id$rnd1').prop('disabled', false); " : "\$j('#sales_id$rnd1').prop('disabled', true); ")."\$j('#sales_idLoading').html(''); \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#sales_id_caption').length) \$j('#sales_id_caption').click(function() { sales_id_update_autofills$rnd1(); });\n";

	$templateCode .= "\tproduct_id_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'details_autofill.php?rnd1=$rnd1&mfk=product_id&id=' + encodeURIComponent('".addslashes($row['product_id'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'details_autofill.php?rnd1=$rnd1&mfk=product_id&id=' + encodeURIComponent(AppGini.current_product_id{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#product_id$rnd1').prop('disabled', true); \$j('#product_idLoading').html('<img src=loading.gif align=top>'); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm[1] || (($arrPerm[3] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm[3] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm[3] == 3)) ? "\$j('#product_id$rnd1').prop('disabled', false); " : "\$j('#product_id$rnd1').prop('disabled', true); ")."\$j('#product_idLoading').html(''); \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#product_id_caption').length) \$j('#product_id_caption').click(function() { product_id_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	if( $_REQUEST['FilterField'][1]=='5' && $_REQUEST['FilterOperator'][1]=='<=>') {
		$templateCode.="\n<input type=hidden name=sales_id value=\"" . html_attr($_REQUEST['FilterValue'][1]) . "\">\n";
	}
	if( $_REQUEST['FilterField'][1]=='8' && $_REQUEST['FilterOperator'][1]=='<=>') {
		$templateCode.="\n<input type=hidden name=product_id value=\"" . html_attr($_REQUEST['FilterValue'][1]) . "\">\n";
	}

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('details');
	if($selected_id) {
		$jdata = get_joined_record('details', $selected_id);
		if($jdata === false) $jdata = get_defaults('details');
		$rdata = $row;
	}
	$templateCode .= loadView('details-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: details_dv
	if(function_exists('details_dv')) {
		$args=[];
		details_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}