<?php
// This script and data application were generated by AppGini 5.96
// Download AppGini for free from https://bigprof.com/appgini/download/

	$currDir = dirname(__FILE__);
	include_once("{$currDir}/lib.php");
	@include_once("{$currDir}/hooks/sales.php");
	include_once("{$currDir}/sales_dml.php");

	// mm: can the current member access this page?
	$perm = getTablePermissions('sales');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied']);
		exit;
	}

	$x = new DataList;
	$x->TableName = 'sales';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`sales`.`id`" => "id",
		"IF(    CHAR_LENGTH(`users1`.`id`), CONCAT_WS('',   `users1`.`id`), '') /* Buyer id */" => "user_id",
		"`sales`.`pay_id`" => "pay_id",
		"if(`sales`.`sales_day`,date_format(`sales`.`sales_day`,'%m/%d/%Y'),'')" => "sales_day",
		"IF(    CHAR_LENGTH(`users1`.`firstname`), CONCAT_WS('',   `users1`.`firstname`), '') /* First_name */" => "first_name",
		"IF(    CHAR_LENGTH(`users1`.`lastname`), CONCAT_WS('',   `users1`.`lastname`), '') /* Last_name */" => "last_name",
		"IF(    CHAR_LENGTH(`users1`.`email`), CONCAT_WS('',   `users1`.`email`), '') /* Email */" => "email",
		"IF(    CHAR_LENGTH(`users1`.`contact_info`), CONCAT_WS('',   `users1`.`contact_info`), '') /* Phone */" => "phone",
		"IF(    CHAR_LENGTH(`users1`.`address`), CONCAT_WS('',   `users1`.`address`), '') /* Address */" => "address",
		"IF(    CHAR_LENGTH(`users1`.`zone`), CONCAT_WS('',   `users1`.`zone`), '') /* Zone */" => "zone",
		"IF(    CHAR_LENGTH(`users1`.`cost`), CONCAT_WS('',   `users1`.`cost`), '') /* Zone fee */" => "zone_fee",
		"`sales`.`generated_by`" => "generated_by",
		"`sales`.`confirmation_id`" => "confirmation_id",
		"`sales`.`approval`" => "approval",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`sales`.`id`',
		2 => '`users1`.`id`',
		3 => 3,
		4 => '`sales`.`sales_day`',
		5 => '`users1`.`firstname`',
		6 => '`users1`.`lastname`',
		7 => '`users1`.`email`',
		8 => '`users1`.`contact_info`',
		9 => '`users1`.`address`',
		10 => '`users1`.`zone`',
		11 => '`users1`.`cost`',
		12 => 12,
		13 => 13,
		14 => 14,
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`sales`.`id`" => "id",
		"IF(    CHAR_LENGTH(`users1`.`id`), CONCAT_WS('',   `users1`.`id`), '') /* Buyer id */" => "user_id",
		"`sales`.`pay_id`" => "pay_id",
		"if(`sales`.`sales_day`,date_format(`sales`.`sales_day`,'%m/%d/%Y'),'')" => "sales_day",
		"IF(    CHAR_LENGTH(`users1`.`firstname`), CONCAT_WS('',   `users1`.`firstname`), '') /* First_name */" => "first_name",
		"IF(    CHAR_LENGTH(`users1`.`lastname`), CONCAT_WS('',   `users1`.`lastname`), '') /* Last_name */" => "last_name",
		"IF(    CHAR_LENGTH(`users1`.`email`), CONCAT_WS('',   `users1`.`email`), '') /* Email */" => "email",
		"IF(    CHAR_LENGTH(`users1`.`contact_info`), CONCAT_WS('',   `users1`.`contact_info`), '') /* Phone */" => "phone",
		"IF(    CHAR_LENGTH(`users1`.`address`), CONCAT_WS('',   `users1`.`address`), '') /* Address */" => "address",
		"IF(    CHAR_LENGTH(`users1`.`zone`), CONCAT_WS('',   `users1`.`zone`), '') /* Zone */" => "zone",
		"IF(    CHAR_LENGTH(`users1`.`cost`), CONCAT_WS('',   `users1`.`cost`), '') /* Zone fee */" => "zone_fee",
		"`sales`.`generated_by`" => "generated_by",
		"`sales`.`confirmation_id`" => "confirmation_id",
		"`sales`.`approval`" => "approval",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`sales`.`id`" => "Sales ID",
		"IF(    CHAR_LENGTH(`users1`.`id`), CONCAT_WS('',   `users1`.`id`), '') /* Buyer id */" => "Buyer id",
		"`sales`.`pay_id`" => "Order ID",
		"`sales`.`sales_day`" => "Sales_date",
		"IF(    CHAR_LENGTH(`users1`.`firstname`), CONCAT_WS('',   `users1`.`firstname`), '') /* First_name */" => "First_name",
		"IF(    CHAR_LENGTH(`users1`.`lastname`), CONCAT_WS('',   `users1`.`lastname`), '') /* Last_name */" => "Last_name",
		"IF(    CHAR_LENGTH(`users1`.`email`), CONCAT_WS('',   `users1`.`email`), '') /* Email */" => "Email",
		"IF(    CHAR_LENGTH(`users1`.`contact_info`), CONCAT_WS('',   `users1`.`contact_info`), '') /* Phone */" => "Phone",
		"IF(    CHAR_LENGTH(`users1`.`address`), CONCAT_WS('',   `users1`.`address`), '') /* Address */" => "Address",
		"IF(    CHAR_LENGTH(`users1`.`zone`), CONCAT_WS('',   `users1`.`zone`), '') /* Zone */" => "Zone",
		"IF(    CHAR_LENGTH(`users1`.`cost`), CONCAT_WS('',   `users1`.`cost`), '') /* Zone fee */" => "Zone fee",
		"`sales`.`generated_by`" => "Generated by",
		"`sales`.`confirmation_id`" => "Confirmation id",
		"`sales`.`approval`" => "Approval",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`sales`.`id`" => "id",
		"IF(    CHAR_LENGTH(`users1`.`id`), CONCAT_WS('',   `users1`.`id`), '') /* Buyer id */" => "user_id",
		"`sales`.`pay_id`" => "pay_id",
		"if(`sales`.`sales_day`,date_format(`sales`.`sales_day`,'%m/%d/%Y'),'')" => "sales_day",
		"IF(    CHAR_LENGTH(`users1`.`firstname`), CONCAT_WS('',   `users1`.`firstname`), '') /* First_name */" => "first_name",
		"IF(    CHAR_LENGTH(`users1`.`lastname`), CONCAT_WS('',   `users1`.`lastname`), '') /* Last_name */" => "last_name",
		"IF(    CHAR_LENGTH(`users1`.`email`), CONCAT_WS('',   `users1`.`email`), '') /* Email */" => "email",
		"IF(    CHAR_LENGTH(`users1`.`contact_info`), CONCAT_WS('',   `users1`.`contact_info`), '') /* Phone */" => "phone",
		"IF(    CHAR_LENGTH(`users1`.`address`), CONCAT_WS('',   `users1`.`address`), '') /* Address */" => "address",
		"IF(    CHAR_LENGTH(`users1`.`zone`), CONCAT_WS('',   `users1`.`zone`), '') /* Zone */" => "zone",
		"IF(    CHAR_LENGTH(`users1`.`cost`), CONCAT_WS('',   `users1`.`cost`), '') /* Zone fee */" => "zone_fee",
		"`sales`.`generated_by`" => "generated_by",
		"`sales`.`confirmation_id`" => "confirmation_id",
		"`sales`.`approval`" => "approval",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['user_id' => 'Buyer id', ];

	$x->QueryFrom = "`sales` LEFT JOIN `users` as users1 ON `users1`.`id`=`sales`.`user_id` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 1;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'sales_view.php';
	$x->RedirectAfterInsert = 'sales_view.php';
	$x->TableTitle = 'Orders Made';
	$x->TableIcon = 'resources/table_icons/bar-chart-icon.png';
	$x->PrimaryKey = '`sales`.`id`';
	$x->DefaultSortField = '14';
	$x->DefaultSortDirection = 'desc';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 80, 150, 150, 150, ];
	$x->ColCaption = ['Sales ID', 'Buyer id', 'Order ID', 'Sales_date', 'First_name', 'Last_name', 'Email', 'Phone', 'Address', 'Zone', 'Zone fee', 'Generated by', 'Confirmation id', 'Approval', ];
	$x->ColFieldName = ['id', 'user_id', 'pay_id', 'sales_day', 'first_name', 'last_name', 'email', 'phone', 'address', 'zone', 'zone_fee', 'generated_by', 'confirmation_id', 'approval', ];
	$x->ColNumber  = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/sales_templateTV.html';
	$x->SelectedTemplate = 'templates/sales_templateTVS.html';
	$x->TemplateDV = 'templates/sales_templateDV.html';
	$x->TemplateDVP = 'templates/sales_templateDVP.html';

	$x->ShowTableHeader = 0;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, ['user', 'group'])) { $DisplayRecords = 'all'; }
	if($perm['view'] == 1 || ($perm['view'] > 1 && $DisplayRecords == 'user' && !$_REQUEST['NoFilter_x'])) { // view owner only
		$x->QueryFrom .= ', `membership_userrecords`';
		$x->QueryWhere = "WHERE `sales`.`id`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='sales' AND LCASE(`membership_userrecords`.`memberID`)='" . getLoggedMemberID() . "'";
	} elseif($perm['view'] == 2 || ($perm['view'] > 2 && $DisplayRecords == 'group' && !$_REQUEST['NoFilter_x'])) { // view group only
		$x->QueryFrom .= ', `membership_userrecords`';
		$x->QueryWhere = "WHERE `sales`.`id`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='sales' AND `membership_userrecords`.`groupID`='" . getLoggedGroupID() . "'";
	} elseif($perm['view'] == 3) { // view all
		// no further action
	} elseif($perm['view'] == 0) { // view none
		$x->QueryFields = ['Not enough permissions' => 'NEP'];
		$x->QueryFrom = '`sales`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: sales_init
	$render = true;
	if(function_exists('sales_init')) {
		$args = [];
		$render = sales_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: sales_header
	$headerCode = '';
	if(function_exists('sales_header')) {
		$args = [];
		$headerCode = sales_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once("{$currDir}/header.php"); 
	} else {
		ob_start();
		include_once("{$currDir}/header.php");
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: sales_footer
	$footerCode = '';
	if(function_exists('sales_footer')) {
		$args = [];
		$footerCode = sales_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once("{$currDir}/footer.php"); 
	} else {
		ob_start();
		include_once("{$currDir}/footer.php");
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
